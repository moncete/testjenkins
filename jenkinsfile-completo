def repo = env.GIT_URL //Variable para la url del repo
def ent = env.BRANCH_NAME //Variable para el entorno de ejecucion

pipeline {

    agent { label 'vlish4200' }

    parameters { 
        //choice(name: 'ENTORNO', choices: ['EPD', 'EPI1', 'EP2'], description: 'Entornos previos') 
        //extendedChoice(defaultValue: 'all', description: '', multiSelectDelimiter: ',', name: 'test', quoteValue: false, saveJSONParameterToFile: false, type: 'PT_MULTI_SELECT', value: 'all,consul,telegraf,filebeat', visibleItemCount: 4)
        text(name: 'Nodo', defaultValue: 'Para hacer mas de una maquina seprarar con comas', description:'Creacion o Elminiacion Maquina' )
        //string(name: 'Servicio', defaultValue: 'Nombre_servicio', description: 'Servicio a reiniciar')
        choice(name: 'Tipo', choices: ['server','agent'], description: 'Tipo de nodo por Consul')
        choice(name: 'Accion', choices: ['Crear','Borrar'], description: 'Accion a Ejecutar')
    }

    
    
    stages {

        stage ("Dar de alta Nodo") {

            when {
                expression { params.Accion == 'Crear' }
            }

            steps {
                 ansiColor('xterm') {
                    ansiblePlaybook (
                        playbook: 'provision.yml',
                        inventory: 'inventario',
                        credentialsId: '343c97f1-a663-4d78-94ca-5ed66a5fb039',
                        extraVars: [ ENT: "${ent}", TIPO: params.Tipo, host: params.Nodo ],
                        tags: 'Crear',
                        //become: true,
                        //becomeUser: 'sv00967',
                        colorized: true
                    )                     
                }
            }
        }
        stage ("Dar de baja Nodo") {

            when {
                expression { params.Accion == "Borrar" }
            }

            steps {
                 ansiColor('xterm') {
                    ansiblePlaybook (
                        playbook: 'provision.yml',
                        inventory: 'inventario',
                        credentialsId: '343c97f1-a663-4d78-94ca-5ed66a5fb039',
                        extraVars: [ ENT: "${ent}", TIPO: params.Tipo, host: params.Nodo ],
                        tags: 'Borrar',
                        //become: true,
                        //becomeUser: 'sv00967',
                        colorized: true
                    )                     
                }
            }
       }
        
        stage ("Actualizar Inventarios"){

            steps{

                withCredentials([usernamePassword(credentialsId: 'bitbu', passwordVariable: 'passwd', usernameVariable: 'user')]) {
                    sh """
                        echo ""${ent}""
                        echo \"${env.BRANCH_NAME}\"
                        echo ${params.Accion}
                        echo ${params.Nodo}
                        echo ${user}
                        echo '${passwd}'
                        cat inventario
                        git checkout
                        git add inventario
                        git commit -m \"Nodos para ${params.Accion} son ${params.Nodo}\"
                        git push -v https://${user}:'${passwd}'@aqdes-stash.cm.es/stash/scm/arqdvo/ansible-devops-maintenance.git  ${ent}
                    """
                }
            }
        }

    }

    post {
        /*success {
            withCredentials([usernamePassword(credentialsId: 'bitbu', passwordVariable: 'passwd', usernameVariable: 'user')]) {
                    sh """
                        echo ""${ent}""
                        echo \"${env.BRANCH_NAME}\"
                        echo ${params.Accion}
                        echo ${params.Nodo}
                        echo ${user}
                        echo '${passwd}'
                        git checkout
                        git add inventario
                        git commit -m \"Nodos para ${params.Accion} son ${params.Nodo}\"
                        git push -f https://${user}:'${passwd}'@aqdes-stash.cm.es/stash/scm/arqdvo/ansible-devops-maintenance.git 
                    """
            }
        }*/
        always {
            sh "git clean -ffxd"
        }
    }

}
